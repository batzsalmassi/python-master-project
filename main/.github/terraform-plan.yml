name: "Terraform Plan"

on: 
  pull_request:

env:
  TF_CLOUD_ORGANIZATION: "seansalmassi"
  TF_CLOUD_WORKSPACE: "python-master-project"
  TF_API_Token: ${{ secrets.TF_CLOUD_TOKEN }}
  CONFIG_DIRECTORY: "./"

jobs:
  terraform:
    if: github.repository == 'batzsalmassi/python-master-project'
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    permissions:
      contests: write
      pull-requests: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: plan-upload
        with:
          workspace: ${{ env.TF_CLOUD_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
          speculative: true

        - name: Create Plan Run
          uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
          with:
            workspace: ${{ env.TF_CLOUD_WORKSPACE }}
            configuration-version: ${{ steps.plan-upload.outputs.configuration-version }}
            plan-only: true

        - name: Get Plan Out
          uses: hashicorp/tfc-workflows-github/actions/get-run-out@v1.0.0
          id: plan-out
          with:
            plan: ${{ fromJSON(steps.plan-run.outputs.payload).data.relationships.plan.data.id }}

        - name: Update PR
          uses: actions/github-script@v6
          id: plan-comment
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
              // 1. Retrieve existing bot comments for the PR
              const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
              });
              const botComment = comments.find(comment => {
                return comment.user.type === 'Bot' && comment.body.includes('Terraform Cloud Plan Output')
              });
              const output = `#### Terraform Cloud Plan Output
                \`\`\`
                Plan: ${{ steps.plan-output.outputs.add }} to add, ${{ steps.plan-output.outputs.change }} to change, ${{ steps.plan-output.outputs.destroy }} to destroy.
                \`\`\`
                [Terraform Cloud Plan](${{ steps.plan-run.outputs.run_link }})
                `;
              // 3. Delete previous comment so PR timeline makes sense
              if (botComment) {
                github.rest.issues.deleteComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: botComment.id,
                });
              }
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              });